//----------------------------------------------------------------
// Document : 출발 처리
// 작성자 : 김대영
// 작성일자 : 2021-03-02
//----------------------------------------------------------------

//전역 변수 설정
let gvOrgData = new Array();	//데이터 변경전의 원본데이터배열
let gvPojang = "";
let gvTmpVal;
//let gvHeightChk = true; //처음 조회시와 조회된 후 페이지만 넘길시에 디자인이 틀려져서 사용

//페이지 오픈시 실행
function setCondition() {
//----------------------------------------------------------------------------------------------------------------------------
// 1.초기화면 설정
//----------------------------------------------------------------------------------------------------------------------------
    cfBtnHide("insert","print","modify");
   
    // 날짜
    cfMaxLength("txt_fromDate", "L"); //최대길이 설정 "S" 4자리, "M" 7자리, "L" 10자리
    cfMaxLength("txt_toDate", "L");   //최대길이 설정 "S" 4자리, "M" 7자리, "L" 10자리

//----------------------------------------------------------------
// 콤보박스
//----------------------------------------------------------------
    cfGetHeadCombo("ord_chul_e", "saupj", "sel_saupj"); //사업장
    cfGetHeadCombo("ord_chul_e", "ittyp", "sel_ittyp"); //품목구분
    gvPojang = "<option></option>" + cfGetTableCombo("ord_chul_e", "pojang");   //포장용기
    
    setInitValue();
}
//----------------------------------------------------------------
// 초기값 설정
//----------------------------------------------------------------
function setInitValue() {
    const vToday = cfGetToday();
    cfSetValue("txt_fromDate", cfStringFormat(vToday.substr(0,6) + "01", "D"));
    cfSetValue("txt_toDate", cfStringFormat(vToday, "D"));
    //$("#txt_fromDate").val(cfStringFormat(vToday.substr(0,6) + "01","D"));
    //$("#txt_toDate").val(cfStringFormat(vToday,"D"));
    const vCvcod = cfGetLoginCvcod();
    const vCvnas = cfGetLoginCvnas();
    cfSetValue("txt_cvcod", vCvcod);
    cfSetValue("txt_cvnas", vCvnas);
    //$("#txt_cvcod").val(vCvcod);     
    //$("#txt_cvnas").val(vCvnas);       
}
//----------------------------------------------------------------
// 2.버튼 그룹 이벤트
//----------------------------------------------------------------
//조회 버튼 
function onSearch() {
    pgLoadData(1);
}
//저장 버튼
function onSave(e) {
    if (jfUpdateChk(e.target.id)) {
        let aRowData = new Array();
        let bUpdateStat = true;
        const vToday = cfGetToday();
        const vCvcod = cfGetLoginCvcod();
        //head를 초과한 객체들을 반복선택
        $("#tbl_wrap tr:gt(0)").each(function (row, tr) {
            //tr의 자식요소인 td들의 배열 
            const aTableData = $(this).children("td").map(function () {
                //console.log($(this).children("td").map());
                return $(this).text();
            });
            // console.log($(this));
            // console.log(aTableData);
            // console.log(aTableData[10]);
            //console.log(gvOrgData[row].NAQTY);
            //console.log(row);

            if (gvOrgData[row].NAQTY == aTableData[10]) {
                return false;
            }

            //tr td dropdown에서 값 가져오기

            //const vSelectBoxes = $("#sel_pojang"+ row +" option:selected").val();
            const vSelectBoxes = cfGetValue("sel_pojang" + row );
            console.log(vSelectBoxes);
            let vIpdpt = '' + aTableData[19]; //공장코드 IPDPT
            //console.log(vIpdpt);
            //Uncaught TypeError: Cannot read property 'substring' of undefined
            //Uncaught TypeError: Cannot read property 'substr' of undefined
            //위 에러 발생하면 변수 앞메 '' 연결하여 받은 변수로 substr 사용 정확하게 문자 변환이 안되어 발생함.
            vIpdpt = vIpdpt.substring(0, 2);

            console.log(row);
            if (vIpdpt == "ZZ") {
                if (vIpdpt == "") {
                    $("#oCheckMessage").html("공장코드를 선택하세요.");
                    $("#checkType").attr("class", "modal-content panel-success");
                    modalObj.modalOpenFunc('oCheckModal');
                    bUpdateStat = false;
                    return false;
                }
            }
            if (aTableData[10] == "" || aTableData[10] == 0) {
                console.log(aTableData[10]);
                $("#oCheckMessage").html("출발 처리할 납품수량을 입력하지 않으셨습니다.");
                $("#checkType").attr("class", "modal-content panel-success");
                modalObj.modalOpenFunc('oCheckModal');
                bUpdateStat = false;
                return false;
            }
            if (aTableData[10] > 0) {
                if (vSelectBoxes == "") {
                    $("#oCheckMessage").html("포장용기를 선택하여 주십시오.");
                    $("#checkType").attr("class", "modal-content panel-success");
                    modalObj.modalOpenFunc('oCheckModal');
                    bUpdateStat = false;
                    return false;
                }
            }
            let vJunpyo = cfGetJunPyo(vToday,"P1");
            let vJunpyoNum = vToday + vJunpyo + cfNumToStr(1,2); 
            //Table 자료 저장
            aRowData.push({
                "1" : vJunpyoNum,       //전표
                "2" : aTableData[20],   //업체코드
                "3" : aTableData[1],    //발주번호
                "4" : aTableData[21],   //발주항번
                "5" : aTableData[2],    //품번
                "6" : aTableData[10],   //납품수량
                "7" : aTableData[8],    //납기일
                "8" : "0",
                "9" : "",
                "10" : "0",
                "11" : "0",
                "12" : "0",
                "13" : "0",
                "14" : "",
                "15" : vToday,
                "16" : vCvcod,
                "17" : aTableData[23],
                "18" : "Y",
                "19" : vToday + vJunpyo,
                "20" : aTableData[22],
                "21" : aTableData[25],
                "22" : aTableData[18], 
                "23" : "",
                "24" : aTableData[19],
                "25" : vSelectBoxes,
                "26" : aTableData[12],
                "27" : aTableData[17]
            });
            /*
            aRowData.push({
                "GINGUB": aTableData[0]//구분
                , "BALJPNO": aTableData[1]//발주번호  
                , "ITNBR": aTableData[2]//품번
                , "ITDSC": aTableData[3]//품명
                , "ISPEC": aTableData[4]//규격  
                , "JIJIL": aTableData[5]//재질                      
                , "JANRU": aTableData[6]//발주량                     
                , "GUDAT": aTableData[7]//납기요구일
                , "NAPDATE": aTableData[8]//납기일
                , "WBALQTY": aTableData[9]//발주잔량
                , "NAQTY": aTableData[10]//납품수량   
                , "POJANG": vSelectBoxes //포장용기                                            
                , "POQTY": aTableData[12]//포장용기량
                , "UNMSR": aTableData[13]//단위
                , "FACTORY": aTableData[14]//공장
                , "ESTNO": aTableData[15]//    
                , "ORDER_NO": aTableData[16]//    
                , "BIGO": aTableData[17]//비고
                , "LOTNO": aTableData[18]//포장용기량
                , "IPDPT": aTableData[19]//창고코드
                , "CVCOD": aTableData[20]//업체코드
                , "BALSEQ": aTableData[21]//
                , "PSPEC": aTableData[22]//
                , "PFILE": aTableData[23]//
                , "BALRATE": aTableData[24]//
                , "IPSAUPJ": aTableData[25]//
            });
            */
        });

        if (bUpdateStat) {
            const oData = {
                ActGubun: "I",
                JsonData: JSON.stringify(aRowData)
            }
            cfAjaxSync("POST", "ord_chul_e", oData,"startSave" );
        }
        /*
        if (bUpdateStat) {
            $.ajax({
                type: "POST",
                url: "../ord_chul_e",
                data: { ActGubun: "I", JsonData: JSON.stringify(aRowData)},
                success: function (json) {
                    data = JSON.parse(json);
                    if (data.Result != true) {
                        $("#oCheckMessage").html(data.Message);
                        $("#checkType").attr("class", "modal-content panel-success");
                        modalObj.modalOpenFunc('oCheckModal');
                    } else {
                        //alert창이 아닌 팝업형식으로 알림창을 띄울시 몇 건 처리 했는지 알림창이 조회로 인해 넘어감
                        alert(data.InsertCnt + "건 처리 완료했습니다");
                        pgLoadData(1);	//재조회
                    }
                },
                error: function (request, status, error) {
                    console.log("code = " + request.status + " message = " + request.responseText + " error = " + error);
                    $("#oCheckMessage").html("[DB Error: " + error + "] 시스템 로그를 확인 또는 전산실 연락바랍니다.");
                    $("#checkType").attr("class", "modal-content panel-success");
                    modalObj.modalOpenFunc('oCheckModal');
                }
            });
        }*/
    }
}
//삭제 버튼
function onDelete(e) {
    if (jfUpdateChk(e.target.id)) {
        if (confirm("선택하신 자료를 삭제하시겠습니까?") != true) {
            return false;
        }
        const aRowData = new Array();
        const vChkBox = $("input[name=listChk]:checked");

        vChkBox.each(function (i) {
            // vChkbox.parent() : vChkBox의 부모는 <td> 태그이다.
            // vChkbox.parent().parent() : <td>의 부모이므로 <tr>이다.
            const vTr = vChkBox.parent().parent().eq(i);
            const vTd = vTr.children();
            // vTd.eq(0)은 체크박스이다.
            const vPk = vTd.eq(16).text();
            aRowData.push({
                "KEY": vPk.replace(/^\s+|\s+$/gm, '') //문자열의 시작 부분과 끝 부분사이에 있는 공백문자를 빈 문자열로 바꾸는 정규식
            });
        });
        if (aRowData.size == 0) {
            $("#oCheckMessage").html("삭제할 납입전표를 선택하세요.");
            $("#checkType").attr("class", "modal-content panel-success");
            modalObj.modalOpenFunc('oCheckModal');
            return false;
        }
        const oData = {
            ActGubun: "D",
            JsonData: JSON.stringify(aRowData)
        }
        cfAjaxSync("POST", "ord_chul_e", oData,"cancelDelete" );
        /*$.ajax({
            type: "POST",
            url: "../ord_chul_e",
            data: { ActGubun: "D", JsonData: JSON.stringify(aRowData) },
            success: function (json) {
                data = JSON.parse(json);
                if (data.Result != true) {
                    $("#oCheckMessage").html(data.Message);
                    $("#checkType").attr("class", "modal-content panel-success");
                    modalObj.modalOpenFunc('oCheckModal');
                } else {
                    //alert창이 아닌 팝업형식으로 알림창을 띄울시 몇 건 처리 했는지 알림창이 조회로 인해 넘어감
                    alert(data.DeleteCnt + "건 삭제가 완료되었습니다.");
                    pgLoadData(1);
                }
            },
            error: function (request, status, error) {
                console.log("code = " + request.status + " message = " + request.responseText + " error = " + error);
                $("#oCheckMessage").html("[DB Error: " + error + "] 시스템 로그를 확인 또는 전산실 연락바랍니다.");
                $("#checkType").attr("class", "modal-content panel-success");
                modalObj.modalOpenFunc('oCheckModal');
            }
        });*/
    }
}
// 3. pageTransaction 이벤트
//---------------------------------------------------------------------------------------------------------------------------
//기능 : ajax 통신 후 콜백함수
//인자 : response -> 결과값
//      name -> 호출 시의 명칭
//      status -> 결과상태
//---------------------------------------------------------------------------------------------------------------------------
//동기방식
function pgCallBackSync(response, name, status) {
    let oData;
    if (!status) {
        alert(response);
        return false;
    }
    switch (name) {
        case "startSelect":
            break;
        case "startSave":
            oData = JSON.parse(response);
            if (oData.Result != true) {
                $("#oCheckMessage").html(oData.Message);
                $("#checkType").attr("class", "modal-content panel-success");
                modalObj.modalOpenFunc('oCheckModal');
            } else {
                //alert창이 아닌 팝업형식으로 알림창을 띄울시 몇 건 처리 했는지 알림창이 조회로 인해 넘어감
                alert(oData.InsertCnt + "건 처리 완료했습니다");
                pgLoadData(1);  //재조회
            }
            break;
         case "cancelDelete":
            oData = JSON.parse(response);
            if (oData.Result != true) {
                $("#oCheckMessage").html(oData.Message);
                $("#checkType").attr("class", "modal-content panel-success");
                modalObj.modalOpenFunc('oCheckModal');
            } else {
                //alert창이 아닌 팝업형식으로 알림창을 띄울시 몇 건 처리 했는지 알림창이 조회로 인해 넘어감
                alert(oData.DeleteCnt + "건 처리 완료했습니다");
                pgLoadData(1);  //재조회
            }
            break;
    }
}
//비동기 방식
function pgCallBackAsync(response, name, status) {
    let oData;
    if (!status) {
        alert(response);
        return false;
    }
    switch (name) {
        case "txt_cvcod":
            response = JSON.parse(response);
            let vListHTML = "";
            
            if (response.DATA.length == 0) {
                cfSetValue("txt_cvcod","");
                cfSetValue("txt_cvnas","");
                cfGetMessage("ord_chul_e", "message" ,"50");
                return false;
            }
            
            for(let i=0; i<response.DATA.length;i++) {
                let vItem = response.DATA[i];
                vListHTML = vItem.CVNAS;
            }
            //$("#txt_cvnas").val(vListHTML);
            cfSetValue("txt_cvnas",vListHTML);
            break;
    }
}
//---------------------------------------------------------------------------------------------------------------------------
//기능 : 데이터 조회 후 테이블 구성
//인자 : page, 선택된 현재 페이지
//반환 : JSONObject
//작성 : dykim
//---------------------------------------------------------------------------------------------------------------------------
function pgLoadData(page) {
    const nPageLength = 20; //페이지당 데이터를 보여줄 행의 갯수
    //const vGubun = $(":input:radio[name=gubun]:checked").val();    //라디오 체크된 버튼의 value값
    //const nFdate = $("#txt_fromDate").val().replace(/-/gi, "");  //<-- replaceAll기능
    //const nTdate = $("#txt_toDate").val().replace(/-/gi, "");
    //const vCvcod = $("#txt_cvcod").val();
    //const vCvnas = $("#txt_cvnas").val();
    //const vSaupj = $("#sel_saupj option:selected").val();
    //const vItnbr = $("#txt_itnbr").val();
    //const vItdsc = $("#txt_itdsc").val();
    //const vIttyp = $("#sel_ittyp option:selected").val();
    const vGubun = cfGetValue("rbt_gubunI");
    const nFdate = cfGetValue("txt_fromDate").replace(/-/gi, "");
    const nTdate = cfGetValue("txt_toDate").replace(/-/gi, "");
    const vCvcod = cfGetValue("txt_cvcod");
    const vCvnas = cfGetValue("txt_cvnas");
    const vSaupj = cfGetValue("sel_saupj");
    const vItnbr = cfGetValue("txt_itnbr");
    const vItdsc = cfGetValue("txt_itdsc");
    const vIttyp = cfGetValue("sel_ittyp");
    //값 체크
    if (vCvcod == "") {
        //$("#oCheckMessage").html("거래처 코드를 입력하여 주십시오.");
        //$("#checkType").attr("class", "modal-content panel-success");
        //modalObj.modalOpenFunc('oCheckModal');
        cfGetMessage("ord_chul_e", "message", "203");
        return false;
    }
    const oData = {
        ActGubun: "R",
        Page: page,
        PageLength: nPageLength,
        Gubun: vGubun,
        Fdate: nFdate,
        Tdate: nTdate,
        Cvcod: vCvcod,
        Cvnas: vCvnas,
        Saupj: vSaupj, 
        Itnbr: vItnbr, 
        Itdsc: vItdsc, 
        Ittyp: vIttyp
    } 
    
    let oResponse = cfAjaxSync("POST", "ord_chul_e", oData, "startSelect");
    if (!oResponse) {
        return false;
    }
    let vListHTML = "";
    oResponse = JSON.parse(oResponse);
    oResponse = JSON.parse(JSON.stringify(oResponse).replace(/\:null/gi, "\:\"\""));
    const vTable = cfAjaxSync("GET","ord/table1.txt",null,"table"); //테이블 정보 읽어오기
    
    const nTotalRecords = oResponse.RecordCount;    //데이터 총 갯수
    const nRecordPerPage = oResponse.PageLength;    //페이지의 갯수
    let nPageNo = oResponse.PageNo;
    let oResult = oResponse.DATA;
    if (oResponse.RecordCount > 0) {
        //vListHTML += "<tr>";
        if (vGubun == "I") {
            vListHTML = vTable.split("|")[0];
            /*vListHTML += "<th class='wt70'>구분</th>";
            vListHTML += "<th class='wt150'>발주번호</th>";
            vListHTML += "<th class='wt150'>품번</th>";
            vListHTML += "<th class='wt200'>품명</th>";
            vListHTML += "<th class='wt180'>규격</th>";
            vListHTML += "<th class='wt100'>재질</th>";
            vListHTML += "<th class='wt80'>발주량</th>";
            vListHTML += "<th class='wt100'>납기요구일</th>";
            vListHTML += "<th class='wt100'>납기일</th>";
            vListHTML += "<th class='wt80'>발주잔량</th> ";
            vListHTML += "<th class='wt80'>납품수량</th>";
            vListHTML += "<th class='wt150'>포장용기</th> ";
            vListHTML += "<th class='wt100'>용기적입수</th>";
            vListHTML += "<th class='wt50'>단위</th>";
            vListHTML += "<th class='wt50'>공장</th>";
            vListHTML += "<th class='wt120'>오더번호</th>";
            vListHTML += "<th class='wt120'>고객발주번호</th>";
            vListHTML += "<th class='wt200'>비고</th>";
            vListHTML += "<th class='wt120'>LOT NO</th>";
            vListHTML += "<th class='hidden'>IPDPT</th>";
            vListHTML += "<th class='hidden'>CVCOD</th>"
            vListHTML += "<th class='hidden'>BALSEQ</th>"
            vListHTML += "<th class='hidden'>PSPEC</th>"
            vListHTML += "<th class='hidden'>PFILE</th>"
            vListHTML += "<th class='hidden'>BALRATE</th>"
            vListHTML += "<th class='hidden'>IPSAUPJ</th>"*/
        } else {
            vListHTML = vTable.split("|")[2];
            /*vListHTML += "<th class='wt50' id='thChk'><input type='checkbox' name='checkAll' id='checkAll'></th>";
            vListHTML += "<th class='wt80'>납품처</th>";
            vListHTML += "<th class='wt150'>납품번호</th>";
            vListHTML += "<th class='wt150'>품번</th>";
            vListHTML += "<th class='wt200'>품명</th>";
            vListHTML += "<th class='wt200'>규격</th>";
            vListHTML += "<th class='wt100'>재질</th>";
            vListHTML += "<th class='wt80''>수량</th>";
            vListHTML += "<th class='wt80'>공장</th>";
            vListHTML += "<th class='wt100'>입고상태</th>";
            vListHTML += "<th class='wt150'>발주번호</th>";
            vListHTML += "<th class='wt50'>순번</th> ";
            vListHTML += "<th class='wt150'>고객발주번호</th> ";
            vListHTML += "<th class='wt150'>포장용기</th> ";
            vListHTML += "<th class='wt80'>용기적입수</th> ";
            vListHTML += "<th class='wt200'>비고</th> ";
            vListHTML += "<th class='hidden'>JPNO</th>"*/
        }
        vListHTML += "</tr>";
        $("#tbl_head").html(vListHTML); //테이블 헤드
        vListHTML = "";
        //let vTr = vTable.split("|")[1];
        let vTr = vTable.split("|");
        //let vCol = vTr.split("\n");
        console.log(vTr);
        let oEdit = {
            "pojang" : gvPojang,
        }
        console.log(oEdit); 
        let vRow;
        for (i = 0; i < oResult.length; i++) {
            let aItem = oResult[i];
            //vListHTML = vTr;
            
            //vListHTML += "<tr id='" + i + "'>";
            if (vGubun == "I") {
                //vListHTML += vTd;
                vListHTML = vTr[1];
                vListHTML = cfDrawTable(vListHTML, aItem, i, oEdit);
                vRow += vListHTML;
                //console.log(vRow);
                //vListHTML = vListHTML.replace("NUMBER",i);
                //vListHTML = vListHTML.replace("GINGUB",aItem["GINGUB"]);
                //vListHTML = vListHTML.replace("BALJPNO",aItem["BALJPNO"]);
                //vRow += vListHTML;
                /*vListHTML += vCol[0].replace("NUMBER", i);
                vListHTML += vCol[1].replace("GINGUB",aItem["GINGUB"]);
                vListHTML += vCol[2].replace("BALJPNO",aItem["BALJPNO"]);
                vListHTML += vCol[3].replace("ITNBR",aItem["ITNBR"]);
                vListHTML += vCol[4].replace("ITDSC",aItem["ITDSC"]);
                vListHTML += vCol[5].replace("ISPEC",aItem["ISPEC"]);
                vListHTML += vCol[6].replace("JIJIL",aItem["JIJIL"]);
                vListHTML += vCol[7].replace("JANRU",aItem["JANRU"]);
                vListHTML += vCol[8].replace("GUDAT",aItem["GUDAT"]);
                vListHTML += vCol[9].replace("NAPDATE",aItem["NAPDATE"]);
                vListHTML += vCol[10].replace("WBALQTY",aItem["WBALQTY"]);
                vListHTML += vCol[11].replace("NAQTY","<div class='row_data' id='oNaqty" + i + "'>" + aItem["NAQTY"] + "</div>");
                vListHTML += vCol[12].replace("POJANG","<select id='sel_pojang" + i + "'>" + gvPojang + "</select>");
                vListHTML += vCol[13].replace("POQTY",aItem["POQTY"]);
                vListHTML += vCol[14].replace("UNMSR",aItem["UNMSR"]);
                vListHTML += vCol[15].replace("FACTORY",aItem["FACTORY"]);
                vListHTML += vCol[16].replace("ESTNO",aItem["ESTNO"]);
                vListHTML += vCol[17].replace("ORDER_NO",aItem["ORDER_NO"]);
                vListHTML += vCol[18].replace("BIGO",aItem["BIGO"]);
                vListHTML += vCol[19].replace("LOTNO",aItem["LOTNO"]);
                vListHTML += vCol[21].replace("IPDPT",aItem["IPDPT"]);
                vListHTML += vCol[22].replace("CVCOD",aItem["CVCOD"]);
                vListHTML += vCol[23].replace("BALSEQ",aItem["BALSEQ"]);
                vListHTML += vCol[24].replace("PSPEC",aItem["PSPEC"]);
                vListHTML += vCol[25].replace("PFILE",aItem["PFILE"]);
                vListHTML += vCol[26].replace("BALRATE",aItem["BALRATE"]);
                vListHTML += vCol[27].replace("IPSAUPJ",aItem["IPSAUPJ"]);*/
                /*vListHTML += "<td class='table-contents center'>" + aItem["GINGUB"] + "</td>"; //구분
                vListHTML += "<td class='table-contents center'>" + aItem["BALJPNO"] + "</td>"; //발주번호
                vListHTML += "<td class='table-contents left'>" + aItem["ITNBR"] + "</td>"; //품번
                vListHTML += "<td class='table-contents left'>" + aItem["ITDSC"] + "</td>"; //품명
                vListHTML += "<td class='table-contents left'>" + aItem["ISPEC"] + "</td>"; //규격
                vListHTML += "<td class='table-contents left'>" + aItem["JIJIL"] + "</td>"; //재질
                vListHTML += "<td class='table-contents right'>" + aItem["JANRU"] + "</td>"; //발주량
                vListHTML += "<td class='table-contents center'>" + aItem["GUDAT"] + "</td>"; //납기요구일
                vListHTML += "<td class='table-contents center'>" + aItem["NAPDATE"] + "</td>"; //납기일
                vListHTML += "<td class='table-contents right'>" + aItem["WBALQTY"] + "</td>"; //발주잔량
                vListHTML += "<td class='table-contents right'><div class='row_data' id='oNaqty" + i + "'>" + aItem["NAQTY"] + "</div></td>"; //납품수량
                vListHTML += "<td class='dropdown'>";
                vListHTML += "  <select id='sel_pojang"+ i + "'>";
                vListHTML += gvPojang; //포장용기
                vListHTML += "  </select>";
                vListHTML += "</td>";
                vListHTML += "<td class='table-contents left'>" + aItem["POQTY"] + "</td>"; //용기적입수
                vListHTML += "<td class='table-contents center'>" + aItem["UNMSR"] + "</td>"; //단위
                vListHTML += "<td class='table-contents center'>" + aItem["FACTORY"] + "</td>"; //공장
                vListHTML += "<td class='table-contents center'>" + aItem["ESTNO"] + "</td>"; //오더번호
                vListHTML += "<td class='table-contents center'>" + aItem["ORDER_NO"] + "</td>"; //고객발주번호
                vListHTML += "<td class='table-contents left'>" + aItem["BIGO"] + "</td>"; //비고
                vListHTML += "<td class='table-contents left'>" + aItem["LOTNO"] + "</td>"; //LOTNO
                vListHTML += "<td class='table-contents hidden'>" + aItem["IPDPT"] + "</td>";
                vListHTML += "<td class='table-contents hidden'>" + aItem["CVCOD"] + "</td>";
                vListHTML += "<td class='table-contents hidden'>" + aItem["BALSEQ"] + "</td>";
                vListHTML += "<td class='table-contents hidden'>" + aItem["PSPEC"] + "</td>";
                vListHTML += "<td class='table-contents hidden'>" + aItem["PFILE"] + "</td>";
                vListHTML += "<td class='table-contents hidden'>" + aItem["BALRATE"] + "</td>";
                vListHTML += "<td class='table-contents hidden'>" + aItem["IPSAUPJ"] + "</td>";*/
            } else {
                vListHTML = vTr[3];
                vListHTML = cfDrawTable(vListHTML, aItem, i, gvPojang);
                vRow += vListHTML;
                /*vListHTML += "<td class='table-contents center'><input type='checkbox' name='listChk' id='cbx_listChk'></td>";
                vListHTML += "<td class='table-contents left'>" + aItem["DEPOT_NO"] + "</td>";
                vListHTML += "<td class='table-contents center''>" + aItem["JPNO_HEAD"] + "</td>";
                vListHTML += "<td class='table-contents left'>" + aItem["ITNBR"] + "</td>";
                vListHTML += "<td class='table-contents left'>" + aItem["ITDSC"] + "</td>";
                vListHTML += "<td class='table-contents left''>" + aItem["ISPEC"] + "</td>";
                vListHTML += "<td class='table-contents center'>" + aItem["JIJIL"] + "</td>";
                vListHTML += "<td class='table-contents right''>" + aItem["NAQTY"] + "</td>";
                vListHTML += "<td class='table-contents left''>" + aItem["FACTORY"] + "</td>";
                vListHTML += "<td class='table-contents center'>" + aItem["IO_TXT"] + "</td>";
                vListHTML += "<td class='table-contents center'>" + aItem["BALJPNO"] + "</td>";
                vListHTML += "<td class='table-contents center'>" + aItem["BALSEQ"] + "</td>";
                vListHTML += "<td class='table-contents center'>" + aItem["ORDER_NO"] + "</td>";
                vListHTML += "<td class='table-contents left'>" + aItem["POJANG"] + "</td>";
                vListHTML += "<td class='table-contents right'>" + aItem["POQTY"] + "</td>";
                vListHTML += "<td class='table-contents left'>" + aItem["BIGO"] + "</td>";
                vListHTML += "<td class='table-contents hidden'>" + aItem["JPNO"] + "</td>";*/
            }
            vListHTML += "</tr>";
            //Table 원본 자료 저장
            gvOrgData.push({
                "GINGUB": aItem["GINGUB"],  //구분
                "BALJPNO": aItem["BALJPNO"],//발주번호  
                "ITNBR": aItem["ITNBR"],    //품번
                "ITDSC": aItem["ITDSC"],    //품명
                "ISPEC": aItem["ISPEC"],    //규격  
                "JIJIL": aItem["JIJIL"],    //재질                      
                "JANRU": aItem["JANRU"],    //발주량                     
                "GUDAT": aItem["GUDAT"],    //납기요구일
                "NAPDATE": aItem["NAPDATE"],//납기일
                "WBALQTY": aItem["WBALQTY"],//발주잔량  
                "NAQTY": aItem["NAQTY"],    //납품수량 
                "POJANG": "",               //포장용기    
                "POQTY": aItem["POQTY"],    //용기적입수
                "UNMSR": aItem["UNMSR"],    //단위
                "FACTORY": aItem["FACTORY"],//공장
                "ESTNO": aItem["ESTNO"],    // 오더번호
                "ORDER_NO": aItem["ORDER_NO"], //고객발주번호
                "BIGO": aItem["BIGO"],      //비고
                "LOTNO": aItem["LOTNO"],    //LOTNO
                "CVCOD": aItem["CVCOD"],    //업체코드
                "BALSEQ": aItem["BALSEQ"],  //발주순번    
                "PSPEC": aItem["PSPEC"],    //
                "PFILE": aItem["PFILE"],
                "BALRATE": aItem["BALRATE"],//발주단위    
                "IPSAUPJ": aItem["IPSAUPJ"],//사업장코드
                "IPDPT": aItem["IPDPT"]     //창고코드                    
            });
        }
        $("#tbl_wrap").show();
        
        $("#tbl_body").html(vRow); //테이블 몸체  
        //페이징
        const oPageNav = cfDrawPageNav(nTotalRecords, nRecordPerPage, nPageNo);
        $("#oPaginate").html(oPageNav);
    } else {
        //$("#tablelist").hide();
        //$("#oCheckMessage").html("해당 조회조건에 대한 자료가 없습니다.");
        //$("#checkType").attr("class", "modal-content panel-success");
        //modalObj.modalOpenFunc("oCheckModal");
        cfGetMessage("ord_chul_e", "message", "300");
        cfClearData("tbl_wrap", "oPaginate");
    }        
}

//팝업 처리
function pgAfterPopup(id, data) {
    switch(id) {
        case "oVndmstModal":
            cfSetValue("txt_cvcod",data[1]);
            cfSetValue("txt_cvnas",data[2]);
            break;
    }
}

// 4.이벤트 처리
//----------------------------------------------------------------
// 이벤트 처리
//----------------------------------------------------------------
$(document).keydown(function (e) { 
    const vEventId = e.target.id;
    const vEventValue = e.target.value;
    const vEventCode = e.which? e.which : e.keyCode;
    switch(vEventId) {
        case "txt_fromDate":
            if (vEventCode == 13) {
                const vFormatNum = cfStringFormat(vEventValue,"D");
                $("#txt_fromDate").val(vFormatNum);
            }
            break;
        case "txt_toDate":
            if (vEventCode == 13) {
                const vFormatNum = cfStringFormat(vEventValue,"D");
                $("#txt_toDate").val(vFormatNum);
            }
            break;
        case "txt_cvcod":
            // 13 = Enter 키
            if (vEventCode == 13) {
                let vCvcod = vEventValue;
                if (vCvcod != "") {
                    const oData = {
                        SearchGubun:"inputCvcod",
                        Cvcod:vCvcod
                    };
                    cfAjaxAsync("GET","ord_chul_e",oData,"txt_cvcod");
                    /*
                    $.ajax({
                        type: "GET",
                        url: "../ord_chul_e",
                        data: {SearchGubun:"inputCvcod",Cvcod:vCvcod},
                        dataType: "JSON",
                        success: function (response) {
                            let vListHTML = "";
                            for(let i=0; i<response.DATA.length;i++)
                            {
                                let vItem = response.DATA[i];
                                vListHTML = vItem.CVNAS;
                            }
                            $("#txt_cvnas").val(vListHTML);
                        },
                        error : function(request,status,error){
                            $("#txt_cvcod").val();
                            $("#txt_cvnas").val();
                            //$("#oCheckMessage").html("올바른 거래처 코드를 입력하여 주십시오.");
                            //$("#checkType").attr("class", "modal-content panel-success");
                            //modalObj.modalOpenFunc('oCheckModal');
                            cfGetMessage("ord_chul_e", "message" ,"50");
                        }
                    });
                    */
                }
            }
            break;
    }
});

//페이지 클릭 시 데이터 
$(document).on("click", ".page-link", function (event) {
    const pagenum = $(this).attr("id");
    pgLoadData(pagenum);
});

//테이블의 행에서 입력가능한 Column에 클릭시 테두리 생성
$(document).on('click','.row_data',function(e) {
    e.preventDefault();
    //console.log(e.type);
    vTmpVal = $(this).text();
    $(this).closest('div').attr('contenteditable', 'true');
   //add bg css
    $(this).addClass('pd5');
    $(this).focus();
});

//테이블의 행에서 입력가능한 Column에서 입력후 포커스가 벗어날시
$(document).on('blur', '.row_data', function(e) {
    //console.log(e);
    $(this).attr('contenteditable', false);
    //$(this).css('background', '');
    $(this).removeClass('pd5');
    const vText = $(this).text();               
    //const vTrid = $(this).parent().parent().attr("id"); //row id가져오기
    //console.log($(this).parent().parent()[0].cells[9].innerText);
    //this는 입력한 박스 object이다.
    //this.parent()는 td이다.
    //this.parent()는 tr이다.
    const nBal = $(this).parent().parent()[0].cells[9].innerText;
    //$(this).closest('tr')[0].cells[9].innerText; 위의 선택자와 같음
    if(Number(vText) < 0 ){
        $("#oCheckMessage").html("납입 수량은 0보다 작을 수 없습니다.");
        $("#checkType").attr("class", "modal-content panel-success");
        modalObj.modalOpenFunc('oCheckModal');  
        $(this).text(0); //원값으로 복귀
        return false;
    }
    if(Number(vText) > Number(nBal)){
        $("#oCheckMessage").html("잔량보다 큽니다. 다시 입력하세요.");
        $("#checkType").attr("class", "modal-content panel-success");
        modalObj.modalOpenFunc('oCheckModal');
        $(this).text(0);
        return false;    
    }
});

/*
//업체리스트 모달 선택값 설정 후 종료
$(document).on('dblclick', '#tbl_tbody_vndmst_p tr ', function () { 
    const aTableData = $(this).children("td").map(function() {
        return $(this).text();
    })      
    $("#txt_cvcod").val(aTableData[1]);
    $("#txt_cvnas").val(aTableData[2]);
    $('.btn-modal-close').click();
});
*/
$(document).on('click', 'input:radio[name=gubun]', function (e) {
/*    $("#tbl_wrap > thead").empty(); //테이블 Clear           
    $("#tbl_wrap > tbody").empty(); //테이블 Clear                    
    $("#oPaginate").html("");  // 페이징 Clear;*/
    cfClearData("tbl_wrap", "oPaginate");
    //gvHeightChk = true;
});

// 5.사용자 정의 함수
function jfUpdateChk(id)
{   
    const vGubun = cfGetValue("rbt_gubunI");
    //const vGubun = $(":input:radio[name=gubun]:checked").val();
    console.log(vGubun);
    
    if (id == "btn_save") {
        if (vGubun == "D") {
            $("#oCheckMessage").html("취소모드에서는 저장이 불가능합니다.");
            $("#checkType").attr("class", "modal-content panel-success");
            modalObj.modalOpenFunc('oCheckModal');
            return false;
        }
    }
    else if (id == "btn_delete") {
        if (vGubun == "I"){
            $("#oCheckMessage").html("저장모드에서는 삭제가 불가능합니다.");
            $("#checkType").attr("class", "modal-content panel-success");
            modalObj.modalOpenFunc('oCheckModal');
            return false;	
        }
    }
    return true;
}